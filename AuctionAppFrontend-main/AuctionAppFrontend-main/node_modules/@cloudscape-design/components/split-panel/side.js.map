{"version":3,"file":"side.js","sourceRoot":"","sources":["../../../src/split-panel/side.tsx"],"names":[],"mappings":";AAAA,qEAAqE;AACrE,sCAAsC;AACtC,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,IAAI,MAAM,MAAM,CAAC;AAExB,OAAO,cAAc,MAAM,oBAAoB,CAAC;AAChD,OAAO,EAAE,gBAAgB,EAAE,MAAM,mCAAmC,CAAC;AAErE,OAAO,MAAM,MAAM,iBAAiB,CAAC;AACrC,OAAO,EAAE,oBAAoB,EAAE,MAAM,yCAAyC,CAAC;AAO/E,MAAM,UAAU,qBAAqB,CAAC,EAYT;;QAX3B,SAAS,eAAA,EACT,aAAa,mBAAA,EACb,SAAS,eAAA,EACT,MAAM,YAAA,EACN,QAAQ,cAAA,EACR,YAAY,kBAAA,EACZ,MAAM,YAAA,EACN,UAAU,gBAAA,EACV,WAAW,iBAAA,EACX,aAAa,mBAAA,EACb,QAAQ,cAAA;IAEF,IAAA,KAA8B,oBAAoB,EAAE,EAAlD,SAAS,eAAA,EAAE,YAAY,kBAA2B,CAAC;IAC3D,IAAM,SAAS,GAAG,gBAAgB,EAAE,CAAC;IACrC,OAAO,CACL,wCACM,SAAS,IACb,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,eAAe,CAAC;YACtF,GAAC,MAAM,CAAC,eAAe,CAAC,IAAG,CAAC,MAAM;gBAClC,EACF,KAAK,EAAE;YACL,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,SAAS;YACtC,QAAQ,EAAE,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS;SACzC,EACD,GAAG,EAAE,aAAa;QAElB,6BACE,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,qBAAqB,CAAC;gBAC3C,GAAC,MAAM,CAAC,OAAO,IAAG,SAAS;oBAC3B,EACF,KAAK,EAAE;gBACL,GAAG,EAAE,SAAS;gBACd,MAAM,EAAE,YAAY;aACrB,EACD,OAAO,EAAE,cAAM,OAAA,CAAC,MAAM,IAAI,QAAQ,EAAE,EAArB,CAAqB,qBACnB,aAAa,EAC9B,IAAI,EAAC,QAAQ;YAEZ,MAAM,CAAC,CAAC,CAAC,CACR,6BAAK,SAAS,EAAE,MAAM,CAAC,qBAAqB,CAAC,IAAG,YAAY,CAAO,CACpE,CAAC,CAAC,CAAC,CACF,oBAAC,cAAc,IACb,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,EAAE,MAAM,CAAC,kBAAkB,CAAC,CAAC,EAClE,QAAQ,EAAC,YAAY,EACrB,OAAO,EAAC,MAAM,EACd,UAAU,EAAC,MAAM,EACjB,SAAS,EAAE,WAAW,CAAC,mBAAmB,EAC1C,YAAY,EAAE,MAAM,EACpB,GAAG,EAAE,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,GACjC,CACH;YACD,6BAAK,SAAS,EAAE,MAAM,CAAC,cAAc,CAAC,iBAAe,CAAC,MAAM;gBAC1D,6BAAK,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,0BAA0B,CAAC,CAAC,IAAG,MAAM,CAAO;gBACxE,4BAAI,SAAS,EAAE,MAAM,CAAC,gBAAgB,CAAC,GAAI;gBAC3C,6BAAK,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,2BAA2B,CAAC,CAAC,IAAG,QAAQ,CAAO,CACvE,CACF,CACF,CACP,CAAC;AACJ,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\nimport { ButtonProps } from '../button/interfaces';\nimport InternalButton from '../button/internal';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { SplitPanelProps, SplitPanelContentProps } from './interfaces';\nimport styles from './styles.css.js';\nimport { useSplitPanelContext } from '../internal/context/split-panel-context';\n\ninterface SplitPanelContentSideProps extends SplitPanelContentProps {\n  i18nStrings: SplitPanelProps.I18nStrings;\n  toggleRef: React.RefObject<ButtonProps.Ref>;\n}\n\nexport function SplitPanelContentSide({\n  baseProps,\n  splitPanelRef,\n  toggleRef,\n  header,\n  children,\n  resizeHandle,\n  isOpen,\n  cappedSize,\n  i18nStrings,\n  panelHeaderId,\n  onToggle,\n}: SplitPanelContentSideProps) {\n  const { topOffset, bottomOffset } = useSplitPanelContext();\n  const isRefresh = useVisualRefresh();\n  return (\n    <div\n      {...baseProps}\n      className={clsx(baseProps.className, styles.drawer, styles.root, styles['position-side'], {\n        [styles['drawer-closed']]: !isOpen,\n      })}\n      style={{\n        width: isOpen ? cappedSize : undefined,\n        maxWidth: isRefresh ? '100%' : undefined,\n      }}\n      ref={splitPanelRef}\n    >\n      <div\n        className={clsx(styles['drawer-content-side'], {\n          [styles.refresh]: isRefresh,\n        })}\n        style={{\n          top: topOffset,\n          bottom: bottomOffset,\n        }}\n        onClick={() => !isOpen && onToggle()}\n        aria-labelledby={panelHeaderId}\n        role=\"region\"\n      >\n        {isOpen ? (\n          <div className={styles['slider-wrapper-side']}>{resizeHandle}</div>\n        ) : (\n          <InternalButton\n            className={clsx(styles['open-button'], styles['open-button-side'])}\n            iconName=\"angle-left\"\n            variant=\"icon\"\n            formAction=\"none\"\n            ariaLabel={i18nStrings.openButtonAriaLabel}\n            ariaExpanded={isOpen}\n            ref={isRefresh ? null : toggleRef}\n          />\n        )}\n        <div className={styles['content-side']} aria-hidden={!isOpen}>\n          <div className={clsx(styles['pane-header-wrapper-side'])}>{header}</div>\n          <hr className={styles['header-divider']} />\n          <div className={clsx(styles['pane-content-wrapper-side'])}>{children}</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"]}
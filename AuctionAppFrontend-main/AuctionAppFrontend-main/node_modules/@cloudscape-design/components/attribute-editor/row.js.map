{"version":3,"file":"row.js","sourceRoot":"","sources":["../../../src/attribute-editor/row.tsx"],"names":[],"mappings":"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","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport InternalBox from '../box/internal';\nimport styles from './styles.css.js';\nimport React, { useCallback } from 'react';\nimport InternalFormField from '../form-field/internal';\nimport InternalColumnLayout, { ColumnLayoutBreakpoint } from '../column-layout/internal';\nimport { AttributeEditorProps } from './interfaces';\nimport { ButtonProps } from '../button/interfaces';\nimport { fireNonCancelableEvent, NonCancelableEventHandler } from '../internal/events';\nimport InternalGrid from '../grid/internal';\nimport { InternalButton } from '../button/internal';\nimport clsx from 'clsx';\nimport { generateUniqueId } from '../internal/hooks/use-unique-id';\n\nconst Divider = () => <InternalBox className={styles.divider} padding={{ top: 'l' }} />;\n\nexport interface RowProps<T> {\n  breakpoint: ColumnLayoutBreakpoint | null;\n  item: T;\n  definition: ReadonlyArray<AttributeEditorProps.FieldDefinition<T>>;\n  i18nStrings: AttributeEditorProps.I18nStrings | undefined;\n  index: number;\n  removable: boolean;\n  removeButtonText: string;\n  removeButtonRefs: Array<ButtonProps.Ref | undefined>;\n  onRemoveButtonClick?: NonCancelableEventHandler<AttributeEditorProps.RemoveButtonClickDetail>;\n}\n\nfunction render<T>(\n  item: T,\n  itemIndex: number,\n  slot: AttributeEditorProps.FieldRenderable<T> | React.ReactNode | undefined\n) {\n  return typeof slot === 'function' ? slot(item, itemIndex) : slot;\n}\n\nconst GRID_DEFINITION = [{ colspan: { default: 12, xs: 9 } }];\nconst REMOVABLE_GRID_DEFINITION = [{ colspan: { default: 12, xs: 9 } }, { colspan: { default: 12, xs: 3 } }];\nexport const Row = React.memo(\n  <T,>({\n    breakpoint,\n    item,\n    definition,\n    i18nStrings = {},\n    index,\n    removable,\n    removeButtonText,\n    removeButtonRefs,\n    onRemoveButtonClick,\n  }: RowProps<T>) => {\n    const isNarrowViewport = breakpoint === 'default' || breakpoint === 'xxs';\n    const isWideViewport = !isNarrowViewport;\n\n    const handleRemoveClick = useCallback(() => {\n      fireNonCancelableEvent(onRemoveButtonClick, { itemIndex: index });\n    }, [onRemoveButtonClick, index]);\n\n    const firstControlId = generateUniqueId('first-control-id-');\n\n    return (\n      <InternalBox className={styles.row} margin={{ bottom: 's' }}>\n        <div role=\"group\" aria-labelledby={`${firstControlId}-label ${firstControlId}`}>\n          <InternalGrid\n            __breakpoint={breakpoint}\n            gridDefinition={removable ? REMOVABLE_GRID_DEFINITION : GRID_DEFINITION}\n          >\n            <InternalColumnLayout\n              className={styles['row-control']}\n              columns={definition.length}\n              __breakpoint={breakpoint}\n            >\n              {definition.map(({ info, label, constraintText, errorText, control }, defIndex) => (\n                <InternalFormField\n                  key={defIndex}\n                  className={styles.field}\n                  label={label}\n                  info={info}\n                  constraintText={render(item, index, constraintText)}\n                  errorText={render(item, index, errorText)}\n                  stretch={true}\n                  i18nStrings={{ errorIconAriaLabel: i18nStrings.errorIconAriaLabel }}\n                  __hideLabel={isWideViewport && index > 0}\n                  controlId={defIndex === 0 ? firstControlId : undefined}\n                >\n                  {render(item, index, control)}\n                </InternalFormField>\n              ))}\n            </InternalColumnLayout>\n            {removable && (\n              <ButtonContainer\n                index={index}\n                isNarrowViewport={isNarrowViewport}\n                hasLabel={definition.some(row => row.label)}\n              >\n                <InternalButton\n                  className={styles['remove-button']}\n                  formAction=\"none\"\n                  ref={ref => {\n                    removeButtonRefs[index] = ref ?? undefined;\n                  }}\n                  onClick={handleRemoveClick}\n                >\n                  {removeButtonText}\n                </InternalButton>\n              </ButtonContainer>\n            )}\n          </InternalGrid>\n        </div>\n        {isNarrowViewport && <Divider />}\n      </InternalBox>\n    );\n  }\n);\n\ninterface ButtonContainer {\n  index: number;\n  children: React.ReactNode;\n  isNarrowViewport: boolean;\n  hasLabel: boolean;\n}\n\nconst ButtonContainer = ({ index, children, isNarrowViewport, hasLabel }: ButtonContainer) => (\n  <div\n    className={clsx({\n      [styles['button-container-haslabel']]: !isNarrowViewport && index === 0 && hasLabel,\n      [styles['button-container-nolabel']]: !isNarrowViewport && index === 0 && !hasLabel,\n      [styles['right-align']]: isNarrowViewport,\n    })}\n  >\n    {children}\n  </div>\n);\n"]}
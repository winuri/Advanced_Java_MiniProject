{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/date-range-picker/calendar/index.tsx"],"names":[],"mappings":"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","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React, { useState } from 'react';\nimport { addMonths, endOfDay, isAfter, isBefore, isSameMonth, startOfDay, startOfMonth } from 'date-fns';\nimport styles from '../styles.css.js';\nimport SpaceBetween from '../../space-between/internal';\nimport { BaseComponentProps } from '../../internal/base-component';\nimport { DateRangePickerProps, RangeCalendarI18nStrings } from '../interfaces';\nimport CalendarHeader from './header';\nimport { Grids } from './grids';\nimport { TimeInputProps } from '../../time-input/interfaces';\nimport clsx from 'clsx';\nimport { useUniqueId } from '../../internal/hooks/use-unique-id';\nimport { getDateLabel, renderTimeLabel } from '../../calendar/utils/intl';\nimport LiveRegion from '../../internal/components/live-region';\nimport { normalizeLocale, normalizeStartOfWeek } from '../../internal/utils/locale';\nimport { parseDate, splitDateTime, formatDateTime } from '../../internal/utils/date-time';\nimport { getBaseDate } from '../../calendar/utils/navigation';\nimport { useMobile } from '../../internal/hooks/use-mobile/index.js';\nimport RangeInputs from './range-inputs.js';\nimport { findDateToFocus, findMonthToDisplay } from './utils';\n\nexport interface DateRangePickerCalendarProps extends BaseComponentProps {\n  value: DateRangePickerProps.PendingAbsoluteValue;\n  setValue: React.Dispatch<React.SetStateAction<DateRangePickerProps.PendingAbsoluteValue>>;\n  locale?: string;\n  startOfWeek?: number;\n  isDateEnabled?: (date: Date) => boolean;\n  i18nStrings: RangeCalendarI18nStrings;\n  dateOnly?: boolean;\n  timeInputFormat?: TimeInputProps.Format;\n  customAbsoluteRangeControl: DateRangePickerProps.AbsoluteRangeControl | undefined;\n}\n\nexport default function DateRangePickerCalendar({\n  value,\n  setValue,\n  locale = '',\n  startOfWeek,\n  isDateEnabled = () => true,\n  i18nStrings,\n  dateOnly = false,\n  timeInputFormat = 'hh:mm:ss',\n  customAbsoluteRangeControl,\n}: DateRangePickerCalendarProps) {\n  const isSingleGrid = useMobile();\n  const normalizedLocale = normalizeLocale('DateRangePicker', locale);\n  const normalizedStartOfWeek = normalizeStartOfWeek(startOfWeek, normalizedLocale);\n\n  const [announcement, setAnnouncement] = useState('');\n  const [currentMonth, setCurrentMonth] = useState(() => findMonthToDisplay(value, isSingleGrid));\n  const [focusedDate, setFocusedDate] = useState<Date | null>(() => {\n    if (value.start.date) {\n      const startDate = parseDate(value.start.date);\n      if (isSameMonth(startDate, currentMonth)) {\n        return startDate;\n      }\n      if (!isSingleGrid && isSameMonth(startDate, addMonths(currentMonth, -1))) {\n        return startDate;\n      }\n    }\n    return findDateToFocus(parseDate(value.start.date), currentMonth, isDateEnabled);\n  });\n\n  const updateCurrentMonth = (startDate: string) => {\n    if (startDate.length >= 8) {\n      const newCurrentMonth = startOfMonth(parseDate(startDate));\n      setCurrentMonth(isSingleGrid ? newCurrentMonth : addMonths(newCurrentMonth, 1));\n    }\n  };\n\n  // recommended to include the start/end time announced with the selection\n  // because the user is not aware of the fact that a start/end time is also set as soon as they select a date\n  const announceStart = (startDate: Date) => {\n    return (\n      i18nStrings.startDateLabel +\n      ', ' +\n      getDateLabel(normalizedLocale, startDate) +\n      ', ' +\n      i18nStrings.startTimeLabel +\n      ', ' +\n      renderTimeLabel(normalizedLocale, startDate, timeInputFormat) +\n      '. '\n    );\n  };\n\n  const announceEnd = (endDate: Date) => {\n    return (\n      i18nStrings.endDateLabel +\n      ', ' +\n      getDateLabel(normalizedLocale, endDate) +\n      ', ' +\n      i18nStrings.endTimeLabel +\n      ', ' +\n      renderTimeLabel(normalizedLocale, endDate, timeInputFormat) +\n      '. '\n    );\n  };\n\n  const announceRange = (startDate: Date, endDate: Date) => {\n    if (!i18nStrings.renderSelectedAbsoluteRangeAriaLive) {\n      return `${getDateLabel(normalizedLocale, startDate)} – ${getDateLabel(normalizedLocale, endDate)}`;\n    }\n    return i18nStrings.renderSelectedAbsoluteRangeAriaLive(\n      getDateLabel(normalizedLocale, startDate),\n      getDateLabel(normalizedLocale, endDate)\n    );\n  };\n\n  const onSelectDateHandler = (selectedDate: Date) => {\n    const { start, end } = value;\n    let newStart: Date | undefined = undefined;\n    let newEnd: Date | null | undefined = undefined;\n    let announcement = '';\n\n    // If both fields are empty, we set the start date\n    if (!start.date && !end.date) {\n      newStart = startOfDay(selectedDate);\n      announcement = announceStart(newStart);\n    }\n    // If both fields are set, we start new\n    else if (start.date && end.date) {\n      newStart = startOfDay(selectedDate);\n      newEnd = null;\n      announcement = announceStart(newStart);\n    }\n    // If only the END date is empty, we fill it (and swap dates if needed)\n    else if (start.date && !end.date) {\n      const parsedStartDate = parseDate(start.date);\n\n      if (isBefore(selectedDate, parsedStartDate)) {\n        // The user has selected the range backwards, so we swap start and end\n        newStart = startOfDay(selectedDate);\n        newEnd = endOfDay(parsedStartDate);\n        announcement = announceStart(newStart) + announceRange(newStart, newEnd);\n      } else {\n        newEnd = endOfDay(selectedDate);\n        announcement = announceEnd(newEnd) + announceRange(parsedStartDate, newEnd);\n      }\n    }\n    // If only the START date is empty, we fill it (and swap dates if needed)\n    else if (!start.date && end.date) {\n      const existingEndDate = parseDate(end.date);\n\n      if (isAfter(selectedDate, existingEndDate)) {\n        // The user has selected the range backwards, so we swap start and end\n        newStart = startOfDay(existingEndDate);\n        newEnd = endOfDay(selectedDate);\n        announcement = announceEnd(newEnd) + announceRange(newStart, newEnd);\n      } else {\n        newStart = startOfDay(selectedDate);\n        announcement = announceStart(newStart) + announceRange(newStart, existingEndDate);\n      }\n    }\n\n    const formatValue = (\n      date: Date | null | undefined,\n      previous: DateRangePickerProps.DateTimeStrings\n    ): DateRangePickerProps.DateTimeStrings => {\n      if (date === null) {\n        // explicitly reset to empty\n        return { date: '', time: '' };\n      } else if (date === undefined) {\n        // keep old value\n        return previous;\n      }\n      return splitDateTime(formatDateTime(date));\n    };\n\n    setValue({\n      start: formatValue(newStart, value.start),\n      end: formatValue(newEnd, value.end),\n    });\n    setAnnouncement(announcement);\n  };\n\n  const onHeaderChangeMonthHandler = (newCurrentMonth: Date) => {\n    setCurrentMonth(newCurrentMonth);\n\n    const newBaseDateMonth = isSingleGrid ? newCurrentMonth : addMonths(newCurrentMonth, -1);\n    const newBaseDate = getBaseDate(newBaseDateMonth, isDateEnabled);\n    setFocusedDate(newBaseDate);\n  };\n\n  const onChangeStartDate = (value: string) => {\n    setValue((oldValue: DateRangePickerProps.PendingAbsoluteValue) => ({\n      ...oldValue,\n      start: { ...oldValue.start, date: value },\n    }));\n    updateCurrentMonth(value);\n  };\n\n  const interceptedSetValue: DateRangePickerCalendarProps['setValue'] = newValue => {\n    setValue(oldValue => {\n      const updated = typeof newValue === 'function' ? newValue(oldValue) : newValue;\n      updateCurrentMonth(updated.start.date);\n      return updated;\n    });\n  };\n\n  const headingIdPrefix = useUniqueId('date-range-picker-calendar-heading');\n  return (\n    <>\n      <div\n        className={clsx(styles['calendar-container'], {\n          [styles['one-grid']]: isSingleGrid,\n        })}\n      >\n        <SpaceBetween size=\"s\">\n          <div\n            className={clsx(styles.calendar, {\n              [styles['one-grid']]: isSingleGrid,\n            })}\n          >\n            <CalendarHeader\n              baseDate={currentMonth}\n              locale={normalizedLocale}\n              onChangeMonth={onHeaderChangeMonthHandler}\n              previousMonthLabel={i18nStrings.previousMonthAriaLabel}\n              nextMonthLabel={i18nStrings.nextMonthAriaLabel}\n              isSingleGrid={isSingleGrid}\n              headingIdPrefix={headingIdPrefix}\n            />\n\n            <Grids\n              isSingleGrid={isSingleGrid}\n              locale={normalizedLocale}\n              baseDate={currentMonth}\n              focusedDate={focusedDate}\n              onFocusedDateChange={setFocusedDate}\n              isDateEnabled={isDateEnabled}\n              onSelectDate={onSelectDateHandler}\n              onChangeMonth={setCurrentMonth}\n              startOfWeek={normalizedStartOfWeek}\n              todayAriaLabel={i18nStrings.todayAriaLabel}\n              selectedStartDate={parseDate(value.start.date, true)}\n              selectedEndDate={parseDate(value.end.date, true)}\n              headingIdPrefix={headingIdPrefix}\n            />\n          </div>\n\n          <RangeInputs\n            startDate={value.start.date}\n            onChangeStartDate={onChangeStartDate}\n            startTime={value.start.time}\n            onChangeStartTime={value =>\n              setValue(oldValue => ({ ...oldValue, start: { ...oldValue.start, time: value } }))\n            }\n            endDate={value.end.date}\n            onChangeEndDate={value => setValue(oldValue => ({ ...oldValue, end: { ...oldValue.end, date: value } }))}\n            endTime={value.end.time}\n            onChangeEndTime={value => setValue(oldValue => ({ ...oldValue, end: { ...oldValue.end, time: value } }))}\n            i18nStrings={i18nStrings}\n            dateOnly={dateOnly}\n            timeInputFormat={timeInputFormat}\n          />\n          {customAbsoluteRangeControl && <div>{customAbsoluteRangeControl(value, interceptedSetValue)}</div>}\n        </SpaceBetween>\n      </div>\n      <LiveRegion className={styles['calendar-aria-live']}>{announcement}</LiveRegion>\n    </>\n  );\n}\n"]}
{"version":3,"file":"token.js","sourceRoot":"","sources":["../../../src/property-filter/token.tsx"],"names":[],"mappings":"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","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport {\n  ComparisonOperator,\n  FilteringOption,\n  FilteringProperty,\n  GroupText,\n  I18nStrings,\n  JoinOperation,\n  LoadItemsDetail,\n  Token,\n} from './interfaces';\nimport styles from './styles.css.js';\nimport { TokenEditor } from './token-editor';\nimport { getExtendedOperator, getPropertyByKey } from './controller';\n\nimport FilteringToken from '../internal/components/filtering-token';\nimport { NonCancelableEventHandler } from '../internal/events';\nimport { DropdownStatusProps } from '../internal/components/dropdown-status/interfaces';\n\ninterface TokenProps {\n  asyncProperties?: boolean;\n  asyncProps: DropdownStatusProps;\n  customGroupsText: readonly GroupText[];\n  disabled?: boolean;\n  disableFreeTextFiltering?: boolean;\n  expandToViewport?: boolean;\n  filteringOptions: readonly FilteringOption[];\n  filteringProperties: readonly FilteringProperty[];\n  first?: boolean;\n  hideOperations?: boolean;\n  i18nStrings: I18nStrings;\n  onLoadItems?: NonCancelableEventHandler<LoadItemsDetail>;\n  operation: JoinOperation;\n  removeToken: () => void;\n  setOperation: (newOperation: JoinOperation) => void;\n  setToken: (newToken: Token) => void;\n  token: Token;\n}\n\nexport const TokenButton = ({\n  token,\n  operation = 'and',\n  first,\n  removeToken,\n  setToken,\n  setOperation,\n  filteringOptions,\n  filteringProperties,\n  asyncProps,\n  onLoadItems,\n  i18nStrings,\n  asyncProperties,\n  hideOperations,\n  customGroupsText,\n  disabled,\n  disableFreeTextFiltering,\n  expandToViewport,\n}: TokenProps) => {\n  const valueFormatter =\n    token.propertyKey && getExtendedOperator(filteringProperties, token.propertyKey, token.operator)?.format;\n  const property = token.propertyKey && getPropertyByKey(filteringProperties, token.propertyKey);\n  const propertyLabel = property && property.propertyLabel;\n  const tokenValue = valueFormatter ? valueFormatter(token.value) : token.value;\n  return (\n    <FilteringToken\n      showOperation={!first && !hideOperations}\n      operation={operation}\n      andText={i18nStrings.operationAndText}\n      orText={i18nStrings.operationOrText}\n      dismissAriaLabel={i18nStrings.removeTokenButtonAriaLabel(token)}\n      operatorAriaLabel={i18nStrings.tokenOperatorAriaLabel}\n      onChange={setOperation}\n      onDismiss={removeToken}\n      disabled={disabled}\n    >\n      <TokenEditor\n        setToken={setToken}\n        triggerComponent={\n          <span className={styles['token-trigger']}>\n            <TokenTrigger property={propertyLabel} operator={token.operator} value={tokenValue} />\n          </span>\n        }\n        filteringOptions={filteringOptions}\n        filteringProperties={filteringProperties}\n        token={token}\n        asyncProps={asyncProps}\n        onLoadItems={onLoadItems}\n        i18nStrings={i18nStrings}\n        asyncProperties={asyncProperties}\n        customGroupsText={customGroupsText}\n        disableFreeTextFiltering={disableFreeTextFiltering}\n        expandToViewport={expandToViewport}\n      />\n    </FilteringToken>\n  );\n};\n\nconst TokenTrigger = ({\n  property,\n  operator,\n  value,\n}: {\n  property?: string;\n  operator?: ComparisonOperator;\n  value: string;\n}) => {\n  if (property) {\n    property += ' ';\n  }\n  const freeTextContainsToken = operator === ':' && !property;\n  const operatorText = freeTextContainsToken ? '' : operator + ' ';\n  return (\n    <>\n      {property}\n      <span className={styles['token-operator']}>{operatorText}</span>\n      {value}\n    </>\n  );\n};\n"]}